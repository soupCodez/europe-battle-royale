{"version":3,"sources":["App.jsx","reportWebVitals.js","index.jsx"],"names":["i","actions","countries","App","useState","text","setText","className","onClick","action","console","log","length","Math","round","random","country","colorScheme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAwDIA,E,wEArDEC,EAAU,CAAC,MAAO,YAClBC,EAAY,CAChB,UACA,SACA,UACA,gBACA,UACA,YACA,UACA,aACA,aACA,QACA,UACA,UACA,UACA,SACA,yBACA,aACA,WACA,cACA,UACA,SACA,SACA,SACA,UACA,WACA,UACA,UACA,UACA,SACA,UACA,aACA,YACA,SACA,SACA,WACA,UACA,WACA,UACA,QACA,SACA,SACA,UACA,SACA,UACA,cACA,UACA,SACA,QACA,UACA,SACA,sBAqCaC,MAjCf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,KAuBb,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,IAAD,CAAQC,QAXZ,WACE,IAAIC,GAXJC,QAAQC,IAAIV,EAAQW,QACpBZ,EAAIa,KAAKC,MAAMD,KAAKE,SAAWd,EAAQW,QAChCX,EAAQD,EAAI,IAUfgB,GANJN,QAAQC,IAAIT,EAAUU,QACtBZ,EAAIa,KAAKC,MAAMD,KAAKE,SAAWb,EAAUU,QAClCV,EAAUF,EAAI,IAKN,aAAXS,EACFH,EAAQ,GAAD,OAAIU,EAAJ,oBACa,QAAXP,GACTH,EAAQ,GAAD,OAAIU,EAAJ,uBAKkBC,YAAY,OAArC,iBAGA,4BAAIZ,QC1EKa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCCdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9ae1f04e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { Button, ButtonGroup } from '@chakra-ui/react';\nconst actions = ['War', 'Collapse'];\nconst countries = [\n  'Albania',\n  'Latvia',\n  'Andorra',\n  'Liechtenstein',\n  'Armenia',\n  'Lithuania',\n  'Austria',\n  'Luxembourg',\n  'Azerbaijan',\n  'Malta',\n  'Belarus',\n  'Moldova',\n  'Belgium',\n  'Monaco',\n  'Bosnia and Herzegovina',\n  'Montenegro',\n  'Bulgaria',\n  'Netherlands',\n  'Croatia',\n  'Norway',\n  'Cyprus',\n  'Poland',\n  'Czechia',\n  'Portugal',\n  'Denmark',\n  'Romania',\n  'Estonia',\n  'Russia',\n  'Finland',\n  'San Marino',\n  'Macedonia',\n  'Serbia',\n  'France',\n  'Slovakia',\n  'Georgia',\n  'Slovenia',\n  'Germany',\n  'Spain',\n  'Greece',\n  'Sweden',\n  'Hungary',\n  'Sweden',\n  'Iceland',\n  'Switzerland',\n  'Ireland',\n  'Turkey',\n  'Italy',\n  'Ukraine',\n  'Kosovo',\n  'The United Kingdom',\n];\nlet i;\n\nfunction App() {\n  const [text, setText] = useState('');\n\n  function actionPicker() {\n    console.log(actions.length);\n    i = Math.round(Math.random() * actions.length);\n    return actions[i - 1];\n  }\n\n  function countryPicker() {\n    console.log(countries.length);\n    i = Math.round(Math.random() * countries.length);\n    return countries[i - 1];\n  }\n  function picker() {\n    let action = actionPicker();\n    let country = countryPicker();\n    if (action === \"Collapse\") {\n      setText(`${country} has collapsed!`)\n    } else if (action === \"War\") {\n      setText(`${country} is going to war!`)\n    }\n  }\n  return (\n    <div className=\"App\">\n      <Button onClick={picker} colorScheme=\"blue\">\n        Go!\n      </Button>\n      <p>{text}</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { ChakraProvider } from '@chakra-ui/react';\n\nReactDOM.render(\n  <ChakraProvider>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ChakraProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}